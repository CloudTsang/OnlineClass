package com.onlineclass
{
	import com.onlineclass.net.IConnection;
	import com.onlineclass.net.IHeartBeat;
	import com.onlineclass.net.ISender;
	import com.onlineclass.net.mvc.HeartBeatConnection;
	import com.onlineclass.net.mvc.TestolConnectionHSVC;
	import com.onlineclass.net.mvc.TestolConnectionMVC;
	import com.onlineclass.net.sock.HBConnectionSO;
	import com.onlineclass.net.sock.TestolConnection;
	import com.onlineclass.teacherside.net.TeacherCon;
	import com.onlineclass.teacherside.net.TeacherConHSVC;
	
	import spark.components.Label;
	import spark.effects.animation.MotionPath;

	public class ConnectionCreator
	{
		public static function getCon(client:String , method:String , txtTips:Label):ISender
		{
			var con:ISender;
			if(client=="student"){
				switch(method)
				{
					case "Socket":
						con = new TestolConnection(txtTips);
						trace("本测试使用socket连接进行");
						break;
					case "POST":
						con = new TestolConnectionMVC(txtTips , "POST");
						trace("本测试使用POST请求进行");
						break;
					case "GET":
						con = new TestolConnectionHSVC(txtTips , "GET");
						trace("本测试使用GET请求进行");
						break;
				}
			}
			else if(client=="teacher"){
				switch( method )
				{
					case "Socket":
						con = new TeacherCon();
						break;
					case "POST":
						con = new TeacherConHSVC(txtTips);
						break;
					case "GET":
						con = new TeacherConHSVC(txtTips , "GET");
						break;
				}
			}
			return con;
		}
		public static function getHbCon(client:String , method:String , txtTips:Label):IHeartBeat{
			if(client == "teacher") return null;
			var hbcon:IHeartBeat;
			switch(method)
			{
				case "Socket":
					hbcon = new HBConnectionSO();
					trace("本测试使用socket连接进行");
					break;
				case "POST":
					hbcon = new HeartBeatConnection("student");
					break;
				case "GET":
					hbcon = new HeartBeatConnection("student");
					trace("本测试使用GET请求进行");
					break;
			}
			return hbcon;
		}
	}
}